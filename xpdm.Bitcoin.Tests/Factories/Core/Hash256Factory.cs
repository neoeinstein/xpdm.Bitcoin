using System.Collections.Generic;
using xpdm.Bitcoin.Core;

namespace xpdm.Bitcoin.Tests.Factories.Core
{
    public static class Hash256Factory
    {
        public static Hash256 Create(byte[] hashBytes)
        {
            Hash256 hash256 = new Hash256(hashBytes);
            return hash256;
        }

        public static IEnumerable<Hash256> RandomValidHashSet()
        {
            yield return Hash256.Empty;
            yield return Create(new byte[]
                {
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
                });
            yield return Create(new byte[]
                    {
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80
                    });
            yield return Create(new byte[]
                    {
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                    });
            yield return Create(new byte[]
                    {
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F
                    });
            yield return Create(new byte[]
                {
                    0x87, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0,
                    0x81, 0x07, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xC1, 0x83, 0x0F, 0x1E, 0x3C, 0x78, 0xF0, 0xE1, 0xC3
                });
            yield return Create(new byte[]
                {
                    0x94, 0x32, 0x93, 0x43, 0x93, 0x24, 0x93, 0x18, 0x91, 0x32, 0x6A, 0xBD, 0xFF, 0xE6, 0xBD, 0x4E,
                    0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED, 0xFA, 0xCE, 0x3D, 0x29, 0x13, 0x06, 0x59, 0x99, 0xAA, 0x00
                });
        }
    }
}
